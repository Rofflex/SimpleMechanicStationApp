<Window x:Class="SimpleMechanicStationApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimpleMechanicStationApp"
        mc:Ignorable="d"
        Title="MainWindow" Height="280" Width="450" ResizeMode="NoResize" WindowStyle="None" AllowsTransparency="True" Background="Transparent" WindowStartupLocation="CenterScreen" MouseLeftButtonDown="Window_MouseLeftButtonDown">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFF3F0C7" Opacity="0.8"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FFF3F0C7" Opacity="0.8"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFC4E5F6" Opacity="0.8"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF2C628B" Opacity="0.8"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" Opacity="0.8"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" Opacity="0.8"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" Opacity="0.8"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" Opacity="0.8"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" Opacity="0.8"/>

        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFF3F0C7" Opacity="0.5"/>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFF3F0C7" Opacity="0.5"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" Opacity="0.5"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" Opacity="0.5"/>

        <SolidColorBrush x:Key="EButtonExit.Static.Background" Color="#FFBAEDBB" Opacity="0.8"/>
        <SolidColorBrush x:Key="EButtonExit.Static.Stroke" Color="#FFE45252" Opacity="1"/>
        <SolidColorBrush x:Key="EButtonCollapse.Static.Background" Color="#FFBAEDBB" Opacity="0.8"/>
        <SolidColorBrush x:Key="EButtonCollapse.Static.Stroke" Color="#FFBAEDBB" Opacity="1"/>

        <Style x:Key="RoundButtonCorner" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="RoundedTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="10" Background="{StaticResource TextBox.Static.Background}" BorderBrush="{StaticResource TextBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="RoundButtonExitCollapse" TargetType="Button">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource EButtonExit.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource EButtonExit.Static.Stroke}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse x:Name="Ellipse" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1,-1.2,1,1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="Ellipse" Value ="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="PasswordChar" Value="*"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" CornerRadius="10" Background="{StaticResource TextBox.Static.Background}" BorderBrush="{StaticResource TextBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Border CornerRadius="10" BorderBrush="Transparent" BorderThickness="0" Background="#FFB0C4DE">
        <Grid x:Name="MainWindowGrid">
            <TextBox x:Name="TextBoxLogin" Style="{DynamicResource RoundedTextBox}" Margin="214,48,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TextWrapping="NoWrap" FontSize="16" FontFamily="Times New Roman" Width="200" Height="50" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <PasswordBox x:Name="PasswordBoxForPassword" Style="{DynamicResource PasswordBoxStyle}" Margin="214,110,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" FontFamily="Times New Roman" HorizontalAlignment="Left" Width="200" Height="50" VerticalAlignment="Top"/>
            <Button x:Name="ButtonLogin" Style="{DynamicResource RoundButtonCorner}" Content="Log in" HorizontalAlignment="Center" Margin="0,193,0,0" VerticalAlignment="Top" Height="25" Width="128" FontSize="16" FontFamily="Times New Roman" Click="ButtonLogin_Click"/>
            <Button x:Name="ButtonForgotPassword" Style="{DynamicResource RoundButtonCorner}" Content="Forgot password" HorizontalAlignment="Center" Margin="0,232,0,0" VerticalAlignment="Top" Height="25" Width="128" FontSize="16" FontFamily="Times New Roman" />
            <Button x:Name="ButtonExit" Style="{DynamicResource RoundButtonExitCollapse}" Content="X" HorizontalAlignment="Right" Margin="0,3,4,0" VerticalAlignment="Top" Width="15" Height="15"  Click="Button_Click" FontWeight="Bold" FontStretch="Condensed"/>
            <Button x:Name="ButtonCollapse" Style="{DynamicResource RoundButtonExitCollapse}" Content="—"  HorizontalAlignment="Right" Margin="0,3,23,0" VerticalAlignment="Top" Width="15" Height="15" Click="Button_Click_1" FontWeight="Bold" Background="{StaticResource EButtonCollapse.Static.Background}" BorderBrush="{StaticResource EButtonCollapse.Static.Stroke}"/>
            <TextBlock x:Name="TextBlockLogin"  Margin="36,64,0,0" FontSize="16" FontFamily="Times New Roman" Width="128" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Text="Login" TextAlignment="Center" />
            <TextBlock x:Name="TextBlockPassword"  Margin="36,125,0,0" FontSize="16" FontFamily="Times New Roman" Width="128" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Password" TextAlignment="Center" />
        </Grid>
    </Border>
</Window>
